import pyarrow as pa
from google.cloud import bigquery

BIGQUERY_NEL_DATA_SCHEMA = [
    bigquery.SchemaField("requestId", "INTEGER"),
    bigquery.SchemaField("firstReq", "BOOLEAN"),
    bigquery.SchemaField("type", "STRING"),
    bigquery.SchemaField("ext", "STRING"),
    bigquery.SchemaField("status", "INTEGER"),
    bigquery.SchemaField("url", "STRING"),
    bigquery.SchemaField("url_domain", "STRING"),
    bigquery.SchemaField("url_domain_registrable", "STRING"),
    bigquery.SchemaField("url_domain_hosted_resources", "INTEGER"),
    bigquery.SchemaField("url_domain_hosted_resources_with_nel", "INTEGER"),
    bigquery.SchemaField("url_domain_monitored_resources_ratio", "FLOAT"),
    bigquery.SchemaField("total_crawled_resources", "INTEGER"),
    bigquery.SchemaField("total_crawled_domains", "INTEGER"),
    bigquery.SchemaField("total_crawled_resources_with_nel", "INTEGER"),
    bigquery.SchemaField("total_crawled_domains_with_nel", "INTEGER"),
    bigquery.SchemaField("total_crawled_resources_with_correct_nel", "INTEGER"),
    bigquery.SchemaField("total_crawled_domains_with_correct_nel", "INTEGER"),
    bigquery.SchemaField("nel_max_age", "STRING"),
    bigquery.SchemaField("nel_failure_fraction", "STRING"),
    bigquery.SchemaField("nel_success_fraction", "STRING"),
    bigquery.SchemaField("nel_include_subdomains", "STRING"),
    bigquery.SchemaField("nel_report_to", "STRING"),
    bigquery.SchemaField("rt_collectors", "STRING", mode="REPEATED"),
    bigquery.SchemaField("rt_collectors_registrable", "STRING", mode="REPEATED"),
]


PYARROW_MERGE_READ_SCHEMA = pa.schema([
        ('requestId', pa.uint32()),
        ('firstReq', pa.string()),
        ('type', pa.string()),
        ('ext', pa.string()),
        ('status', pa.string()),
        ('url', pa.string()),
        ('url_domain', pa.string()),
        ('url_domain_registrable', pa.string()),
        ('url_domain_hosted_resources', pa.string()),
        ('url_domain_hosted_resources_with_nel', pa.string()),
        ('url_domain_monitored_resources_ratio', pa.float32()),
        ('total_crawled_resources', pa.string()),
        ('total_crawled_domains', pa.string()),
        ('total_crawled_resources_with_nel', pa.string()),
        ('total_crawled_domains_with_nel', pa.string()),
        ('total_crawled_resources_with_correct_nel', pa.string()),
        ('total_crawled_domains_with_correct_nel', pa.string()),
        ('nel_max_age', pa.string()),
        ('nel_failure_fraction', pa.string()),
        ('nel_success_fraction', pa.string()),
        ('nel_include_subdomains', pa.string()),
        ('nel_report_to', pa.string()),
        ('rt_collectors', pa.list_(pa.string())),
        ('rt_collectors_registrable', pa.list_(pa.string()))
    ])


PYARROW_MERGE_WRITE_SCHEMA = pa.schema([
    ('requestId', pa.uint32()),
    ('firstReq', pa.bool_()),
    ('type', pa.dictionary(pa.int64(), pa.string())),
    ('ext', pa.dictionary(pa.int64(), pa.string())),
    ('status', pa.dictionary(pa.int64(), pa.string())),
    ('url', pa.string()),
    ('url_domain', pa.dictionary(pa.int64(), pa.string())),
    ('url_domain_registrable', pa.dictionary(pa.int64(), pa.string())),
    ('url_domain_hosted_resources', pa.dictionary(pa.int64(), pa.string())),
    ('url_domain_hosted_resources_with_nel', pa.dictionary(pa.int64(), pa.string())),
    ('url_domain_monitored_resources_ratio', pa.float32()),
    ('total_crawled_resources', pa.dictionary(pa.int64(), pa.string())),
    ('total_crawled_domains', pa.dictionary(pa.int64(), pa.string())),
    ('total_crawled_resources_with_nel', pa.dictionary(pa.int64(), pa.string())),
    ('total_crawled_domains_with_nel', pa.dictionary(pa.int64(), pa.string())),
    ('total_crawled_resources_with_correct_nel', pa.dictionary(pa.int64(), pa.string())),
    ('total_crawled_domains_with_correct_nel', pa.dictionary(pa.int64(), pa.string())),
    ('nel_max_age', pa.dictionary(pa.int64(), pa.string())),
    ('nel_failure_fraction', pa.dictionary(pa.int64(), pa.string())),
    ('nel_success_fraction', pa.dictionary(pa.int64(), pa.string())),
    ('nel_include_subdomains', pa.dictionary(pa.int64(), pa.string())),
    ('nel_report_to', pa.dictionary(pa.int64(), pa.string())),
    ('rt_collectors', pa.list_(pa.string())),
    ('rt_collectors_registrable', pa.list_(pa.string()))
])


PANDAS_NEL_DATA_TYPES = {
    'requestId': "UInt32",
    'firstReq': "category",
    'type': "category",
    'ext': "category",
    'status': "category",
    'url': "object",
    'url_domain': "category",
    'url_domain_registrable': "category",
    'url_domain_hosted_resources': "category",  # "UInt32",
    'url_domain_hosted_resources_with_nel': "category",  # "UInt32",
    'url_domain_monitored_resources_ratio': "Float32",
    'total_crawled_resources': "category",
    'total_crawled_domains': "category",
    'total_crawled_resources_with_nel': "category",
    'total_crawled_domains_with_nel': "category",
    'total_crawled_resources_with_correct_nel': "category",
    'total_crawled_domains_with_correct_nel': "category",
    'nel_max_age': "category",
    'nel_failure_fraction': "category",
    'nel_success_fraction': "category",
    'nel_include_subdomains': "category",
    'nel_report_to': "category",
    "rt_collectors": "object",
    "rt_collectors_registrable": "object"
}
